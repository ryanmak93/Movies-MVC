@model MovieApp.Models.UserEditViewModel
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@Model.Username</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", id = "username" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", id = "username" } })
                (leave blank to keep old one) 
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>     

                <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save Changes" name="save" class="btn btn-default" id="editUser" />

            </div>
        </div>
        <input type="button" onclick="DeleteUser('@Model.Id')" value="Delete" name="deleteUser" class="btn btn-default" data-confirm="Are you sure you wish to delete @Model.Username?" style="background-color:red; color:white" />
    </div>
}
<br />
<div>
    @Html.ActionLink("Back to List", "Manage", new { id = string.Empty }, null)
</div>


<script src="@Url.Content("~/Scripts/Movie.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Styles/Validation.css")" rel="stylesheet" type="text/css" />